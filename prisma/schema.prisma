// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id            Int      @id @default(autoincrement())
  email         String   @unique
  password  String
  role          Role     @default(USER)
  posts         Post[]
  courses       Course[]
  tokens        Token[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Token {
  id        Int      @id @default(autoincrement())
  refreshToken String @unique
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
  revoked     Boolean  @default(false)
  createdAt   DateTime @default(now())
}

model Post {
  id          Int      @id @default(autoincrement())
  title       String
  slug        String   @unique
  excerpt     String
  image      String
  content     String
  published   Boolean  @default(false)
  authorId    Int
  author      User     @relation(fields: [authorId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Course {
  id          Int      @id @default(autoincrement())
  title       String
  slug        String   @unique
  excerpt     String
  image      String
  description String
  published   Boolean  @default(false)
  authorId    Int
  author      User     @relation(fields: [authorId], references: [id])
  lessons     Lesson[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Lesson {
  id          Int      @id @default(autoincrement())
  courseId    Int
  course      Course   @relation(fields: [courseId], references: [id])
  title       String
  content     String
  order       Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}